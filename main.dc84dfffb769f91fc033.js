(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e,n,r,o){var i=e.name,u=e.link,a=e.likes,c=e.owner,l=e._id,s=o.handleCardClick,f=o.handleDeleteClick,p=o.handleLikeClick;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._templateSelector=n,this._name=i,this._link=u,this._handleCardClick=s,this._likes=a,this._likeCount=a.length,this._handleDeleteClick=f,this._owner=c._id,this._id=l,this._handleLikeClick=p,this._userId=r,this.isLiked=this._checkLike()}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){this._template=document.querySelector(this._templateSelector).content.querySelector(".element"),this._card=this._template.cloneNode(!0),this._image=this._card.querySelector(".element__image"),this._text=this._card.querySelector(".element__title"),this._buttonLike=this._card.querySelector(".element__like-btn"),this._buttonDelete=this._card.querySelector(".element__delete-btn"),this._likeCounter=this._card.querySelector(".element__like-counter")}},{key:"_checkOwner",value:function(){this._owner!==this._userId&&this._buttonDelete.remove()}},{key:"_checkLike",value:function(){var t=this,e=!1;return this._likes.forEach((function(n){n._id===t._userId&&(e=!0)})),e}},{key:"_addLike",value:function(){this._buttonLike.classList.add("element__like-btn_active")}},{key:"_removeLike",value:function(){this._buttonLike.classList.remove("element__like-btn_active")}},{key:"toggleLike",value:function(t){this.setLikesCount(t),this.isLiked?this._removeLike():this._addLike(),this.isLiked=!this.isLiked}},{key:"setLikesCount",value:function(t){this._likeCounter.textContent=t}},{key:"_setData",value:function(){this._image.src=this._link,this._image.alt=this._name,this._text.textContent=this._name,this.setLikesCount(this._likeCount),this.isLiked&&this._addLike()}},{key:"delete",value:function(){this._card.remove(),this._card=null}},{key:"_setListeners",value:function(){var t=this;this._buttonLike.addEventListener("click",this._handleLikeClick),this._buttonDelete.addEventListener("click",this._handleDeleteClick),this._image.addEventListener("click",(function(e){t._handleCardClick(e)}))}},{key:"getCardData",value:function(){var t={};return t.link=this._link,t.text=this._text.textContent,t}},{key:"createCard",value:function(){return this._getTemplate(),this._checkOwner(),this._setData(),this._setListeners(),this._card}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._form.querySelector(this._config.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));e.textContent=t.validationMessage,e.classList.add(this._config.errorClass),t.classList.add(this._config.inputErrorClass)}},{key:"_hideInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));e.textContent="",e.classList.remove(this._config.errorClass),t.classList.remove(this._config.inputErrorClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.classList.remove(this._config.buttonOpacity),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.classList.add(this._config.buttonOpacity),this._buttonElement.disabled=!1)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==u(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===u(o)?o:String(o)),r)}var o}var c=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._containerSelector=n,this._container=document.querySelector(this._containerSelector)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"addInitialItems",value:function(){var t=this;this._items.reverse().forEach((function(e){t._renderer(e)}))}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._buttonSubmit=this._popup.querySelector(".popup__save-btn"),this._buttonClose=this._popup.querySelector(".popup__close-btn")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._buttonClose.addEventListener("click",(function(){t.close()})),this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()}))}},{key:"renderLoading",value:function(t){this._buttonSubmit.textContent=t?this._buttonSubmit.dataset.buttonLoadingText:this._buttonSubmit.dataset.buttonText}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},h.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=v(r);if(o){var n=v(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e._text=e._popup.querySelector(".popup__description"),e}return e=u,(n=[{key:"open",value:function(t){var e=t.link,n=t.text;this._image.src=e,this._image.alt=n,this._text.textContent=n,h(v(u.prototype),"open",this).call(this)}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},g.apply(this,arguments)}function k(t,e){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},k(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&k(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleFormSubmit=e,n._form=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__item")),n._buttonSubmit=n._popup.querySelector(".popup__save-btn"),n}return e=u,(n=[{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;g(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault();var n=t._getInputValues();t._handleFormSubmit(n)}))}},{key:"setInputValues",value:function(t){var e=0;for(var n in t)this._inputList[e].value=t[n],e++}},{key:"close",value:function(){g(S(u.prototype),"close",this).call(this),this._form.reset()}}])&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}var j=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._job=document.querySelector(r),this._avatar=document.querySelector(o),this.id}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t={};return t.name=this._name.textContent,t.job=this._job.textContent,t}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about,r=t.avatar,o=t._id;this._name.textContent=e,this._job.textContent=n,this.setAvatar({avatar:r}),this.id=o}},{key:"setAvatar",value:function(t){var e=t.avatar;this._avatar.src=e}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var P=function(t){return t.ok?t.json():Promise.reject(new Error("Ошибка: ".concat(t.status)))},T=function(){function t(e){var n=e.url,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=n,this._headers=r}var e,n;return e=t,(n=[{key:"getUserData",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(P)}},{key:"setUserData",value:function(t){var e=t.name,n=t.about;return fetch("".concat(this._url,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:n})}).then(P)}},{key:"getInitialCardsData",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(P)}},{key:"setCardData",value:function(t){var e=t.name,n=t.link;return fetch("".concat(this._url,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:e,link:n})}).then(P)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t._id),{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?t:Promise.reject(new Error("Ошибка: ".concat(e.status)))}))}},{key:"addLike",value:function(t){var e=t._id;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{headers:this._headers,method:"PUT"}).then(P)}},{key:"removeLike",value:function(t){var e=t._id;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{headers:this._headers,method:"DELETE"}).then(P)}},{key:"setAvatar",value:function(t){var e=t.link;return fetch("".concat(this._url,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(P)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),I={formSelector:".popup__form",inputSelector:".popup__item",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__item_type_error",errorClass:"popup__error_visible",buttonOpacity:"button-opacity"},q={container:".elements",nameField:".profile__name",jobField:".profile__description",avatar:".profile__avatar",popupProfile:".popup_type_profile",popupCard:".popup_type_card",popupPicture:".popup_type_picture",popupConfirm:".popup_type_confirm",popupAvatar:".popup_type_avatar",cardTemplateId:"#card"},D=document.querySelector(".profile__edit-button"),R=document.querySelector(".profile__add-button"),x=document.querySelector(".profile__avatar-wrapper"),B=document.querySelector('.popup__form[name="profile-input-form"]'),A=document.querySelector('.popup__form[name="add-card-input-form"]'),U=document.querySelector('.popup__form[name="avatar-input-form"]');function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function F(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===V(o)?o:String(o)),r)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=H(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},N.apply(this,arguments)}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}function H(t){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},H(t)}var z=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=H(r);if(o){var n=H(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===V(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._action=e,n._form=n._popup.querySelector(".popup__form"),n}return e=u,(n=[{key:"open",value:function(t){this.item=t,N(H(u.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var t=this;N(H(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._action(t.item)}))}}])&&F(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function M(t){var e=new n(t,q.cardTemplateId,Y.id,{handleCardClick:function(){nt.open(e.getCardData())},handleDeleteClick:function(){et.open(e)},handleLikeClick:function(){e.isLiked?K.removeLike(e).then((function(t){e.toggleLike(t.likes.length)})):K.addLike(e).then((function(t){e.toggleLike(t.likes.length)}))}});return e.createCard()}var G,K=new T({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{"Content-Type":"application/json",authorization:"7daba374-a55e-4250-81a9-4f3724b24784"}});Promise.all([K.getUserData().then((function(t){Y.setUserInfo(t)})).catch((function(){console.log(new Error("Ошибка загрузки"))})),K.getInitialCardsData().then((function(t){(G=new c({items:t,renderer:function(t){var e=M(t);G.addItem(e)}},q.container)).addInitialItems()}))]);var Q=new i(I,B),W=new i(I,A),X=new i(I,U),Y=new j({nameSelector:q.nameField,jobSelector:q.jobField,avatarSelector:q.avatar}),Z=new w(q.popupProfile,(function(t){Z.renderLoading(!0),K.setUserData(t).then((function(t){Y.setUserInfo(t),Z.close()})).finally((function(){Z.renderLoading(!1)}))})),$=new w(q.popupCard,(function(t){$.renderLoading(!0),K.setCardData(t).then((function(t){var e=M(t);G.addItem(e),$.close()})).finally((function(){$.renderLoading(!1)}))})),tt=new w(q.popupAvatar,(function(t){tt.renderLoading(!0),K.setAvatar(t).then((function(t){Y.setAvatar(t)})).then((function(){tt.close()})).finally((function(){tt.renderLoading(!1)}))})),et=new z(q.popupConfirm,(function(t){et.renderLoading(!0),K.deleteCard(t).then((function(t){t.delete()})).then((function(){et.close()})).finally((function(){et.renderLoading(!1)}))})),nt=new b(q.popupPicture);Z.setEventListeners(),$.setEventListeners(),nt.setEventListeners(),et.setEventListeners(),tt.setEventListeners(),Z.setInputValues(Y.getUserInfo()),D.addEventListener("click",(function(){Z.setInputValues(Y.getUserInfo()),Z.open()})),R.addEventListener("click",(function(){W.toggleButtonState(),$.open()})),x.addEventListener("click",(function(){tt.open()})),Q.enableValidation(),W.enableValidation(),X.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,