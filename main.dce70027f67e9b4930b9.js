(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e,n,r,o){var i=e.name,u=e.link,a=e.likes,c=e.owner,l=e._id,s=o.handleCardClick,f=o.handleDeleteClick,p=o.handleLikeClick;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._templateSelector=n,this._name=i,this._link=u,this._handleCardClick=s,this._likes=a,this._likeCount=a.length,this._handleDeleteClick=f,this._owner=c._id,this._id=l,this._handleLikeClick=p,this.isLiked=this._checkLike(),this._userId=r}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){this._template=document.querySelector(this._templateSelector).content.querySelector(".element"),this._card=this._template.cloneNode(!0),this._image=this._card.querySelector(".element__image"),this._text=this._card.querySelector(".element__title"),this._buttonLike=this._card.querySelector(".element__like-btn"),this._buttonDelete=this._card.querySelector(".element__delete-btn"),this._likeCounter=this._card.querySelector(".element__like-counter")}},{key:"_checkOwner",value:function(){this._owner!==this._userId&&this._buttonDelete.remove()}},{key:"_checkLike",value:function(){var t=this,e=!1;return this._likes.forEach((function(n){n._id===t._userId&&(e=!0)})),e}},{key:"_addLike",value:function(){this._buttonLike.classList.add("element__like-btn_active")}},{key:"_removeLike",value:function(){this._buttonLike.classList.remove("element__like-btn_active")}},{key:"toggleLike",value:function(t){this.setLikesCount(t),this.isLiked?this._removeLike():this._addLike(),this.isLiked=!this.isLiked}},{key:"setLikesCount",value:function(t){this._likeCounter.textContent=t}},{key:"_setData",value:function(){this._image.src=this._link,this._image.alt=this._name,this._text.textContent=this._name,this.setLikesCount(this._likeCount),this.isLiked&&this._addLike()}},{key:"delete",value:function(){this._card.remove(),this._card=null}},{key:"_setListeners",value:function(){var t=this;this._buttonLike.addEventListener("click",this._handleLikeClick),this._buttonDelete.addEventListener("click",this._handleDeleteClick),this._image.addEventListener("click",(function(e){t._handleCardClick(e)}))}},{key:"getCardData",value:function(){var t={};return t.link=this._link,t.text=this._text.textContent,t}},{key:"createCard",value:function(){return this._getTemplate(),this._checkOwner(),this._setData(),this._setListeners(),this._card}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._form.querySelector(this._config.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));e.textContent=t.validationMessage,e.classList.add(this._config.errorClass),t.classList.add(this._config.inputErrorClass)}},{key:"_hideInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));e.textContent="",e.classList.remove(this._config.errorClass),t.classList.remove(this._config.inputErrorClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.classList.remove(this._config.buttonOpacity),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.classList.add(this._config.buttonOpacity),this._buttonElement.disabled=!1)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==u(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===u(o)?o:String(o)),r)}var o}var c=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._containerSelector=n,this._container=document.querySelector(this._containerSelector)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"addInitialItems",value:function(){var t=this;this._items.reverse().forEach((function(e){t._renderer(e)}))}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._buttonSubmit=this._popup.querySelector(".popup__save-btn"),this._buttonClose=this._popup.querySelector(".popup__close-btn")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._buttonClose.addEventListener("click",(function(){t.close()})),this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()}))}},{key:"renderLoading",value:function(t){this._buttonSubmit.textContent=t?this._buttonSubmit.dataset.buttonLoadingText:this._buttonSubmit.dataset.buttonText}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},h.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=v(r);if(o){var n=v(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e._text=e._popup.querySelector(".popup__description"),e}return e=u,(n=[{key:"open",value:function(t){var e=t.link,n=t.text;this._image.src=e,this._image.alt=n,this._text.textContent=n,h(v(u.prototype),"open",this).call(this)}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},g.apply(this,arguments)}function k(t,e){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},k(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&k(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleFormSubmit=e,n._form=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__item")),n._buttonSubmit=n._popup.querySelector(".popup__save-btn"),n}return e=u,(n=[{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;g(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault();var n=t._getInputValues();t._handleFormSubmit(n)}))}},{key:"setInputValues",value:function(t){var e=0;for(var n in t)this._inputList[e].value=t[n],e++}},{key:"close",value:function(){g(S(u.prototype),"close",this).call(this),this._form.reset()}}])&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}var j=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._job=document.querySelector(r),this._avatar=document.querySelector(o),this.id}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t={};return t.name=this._name.textContent,t.job=this._job.textContent,t}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about,r=t.avatar,o=t._id;this._name.textContent=e,this._job.textContent=n,this.setAvatar({avatar:r}),this.id=o}},{key:"setAvatar",value:function(t){var e=t.avatar;this._avatar.src=e}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var P=function(t){return t.ok?t.json():Promise.reject(new Error("Ошибка: ".concat(t.status)))},T=function(){function t(e){var n=e.url,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=n,this._headers=r}var e,n;return e=t,(n=[{key:"getUserData",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(P)}},{key:"setUserData",value:function(t){var e=t.name,n=t.about;return fetch("".concat(this._url,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:n})}).then(P)}},{key:"getInitialCardsData",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(P)}},{key:"setCardData",value:function(t){var e=t.name,n=t.link;return fetch("".concat(this._url,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:e,link:n})}).then(P)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t._id),{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?t:Promise.reject(new Error("Ошибка: ".concat(e.status)))}))}},{key:"addLike",value:function(t){var e=t._id;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{headers:this._headers,method:"PUT"}).then(P)}},{key:"removeLike",value:function(t){var e=t._id;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{headers:this._headers,method:"DELETE"}).then(P)}},{key:"setAvatar",value:function(t){var e=t.link;return fetch("".concat(this._url,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(P)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),I={formSelector:".popup__form",inputSelector:".popup__item",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__item_type_error",errorClass:"popup__error_visible",buttonOpacity:"button-opacity"},q={container:".elements",nameField:".profile__name",jobField:".profile__description",avatar:".profile__avatar",popupProfile:".popup_type_profile",popupCard:".popup_type_card",popupPicture:".popup_type_picture",popupConfirm:".popup_type_confirm",popupAvatar:".popup_type_avatar",cardTemplateId:"#card"},D=document.querySelector(".profile__edit-button"),R=document.querySelector(".profile__add-button"),x=document.querySelector(".profile__avatar-wrapper"),B=document.querySelector('.popup__form[name="profile-input-form"]'),A=document.querySelector('.popup__form[name="add-card-input-form"]'),U=document.querySelector('.popup__form[name="avatar-input-form"]');function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function F(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===V(o)?o:String(o)),r)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=H(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},N.apply(this,arguments)}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}function H(t){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},H(t)}var z=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=H(r);if(o){var n=H(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===V(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._action=e,n._form=n._popup.querySelector(".popup__form"),n}return e=u,(n=[{key:"open",value:function(t){this.item=t,N(H(u.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var t=this;N(H(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._action(t.item)}))}}])&&F(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function M(t){var e=new n(t,q.cardTemplateId,Y.id,{handleCardClick:function(){nt.open(e.getCardData())},handleDeleteClick:function(){et.open(e)},handleLikeClick:function(){e.isLiked?K.removeLike(e).then((function(t){e.toggleLike(t.likes.length)})):K.addLike(e).then((function(t){e.toggleLike(t.likes.length)}))}});return e.createCard()}var G,K=new T({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{"Content-Type":"application/json",authorization:"7daba374-a55e-4250-81a9-4f3724b24784"}});Promise.all([K.getUserData().then((function(t){Y.setUserInfo(t)})).catch((function(){console.log(new Error("Ошибка загрузки"))})),K.getInitialCardsData().then((function(t){(G=new c({items:t,renderer:function(t){var e=M(t);G.addItem(e)}},q.container)).addInitialItems()}))]);var Q=new i(I,B),W=new i(I,A),X=new i(I,U),Y=new j({nameSelector:q.nameField,jobSelector:q.jobField,avatarSelector:q.avatar}),Z=new w(q.popupProfile,(function(t){Z.renderLoading(!0),K.setUserData(t).then((function(t){Y.setUserInfo(t),Z.close()})).finally((function(){Z.renderLoading(!1)}))})),$=new w(q.popupCard,(function(t){$.renderLoading(!0),K.setCardData(t).then((function(t){var e=M(t);G.addItem(e),$.close()})).finally((function(){$.renderLoading(!1)}))})),tt=new w(q.popupAvatar,(function(t){tt.renderLoading(!0),K.setAvatar(t).then((function(t){Y.setAvatar(t)})).then((function(){tt.close()})).finally((function(){tt.renderLoading(!1)}))})),et=new z(q.popupConfirm,(function(t){et.renderLoading(!0),K.deleteCard(t).then((function(t){t.delete()})).then((function(){et.close()})).finally((function(){et.renderLoading(!1)}))})),nt=new b(q.popupPicture);Z.setEventListeners(),$.setEventListeners(),nt.setEventListeners(),et.setEventListeners(),tt.setEventListeners(),Z.setInputValues(Y.getUserInfo()),D.addEventListener("click",(function(){Z.setInputValues(Y.getUserInfo()),Z.open()})),R.addEventListener("click",(function(){W.toggleButtonState(),$.open()})),x.addEventListener("click",(function(){tt.open()})),Q.enableValidation(),W.enableValidation(),X.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi43NmUyYjMwODU1ZjdmNjM5OGIzZi5qcyIsIm1hcHBpbmdzIjoiMHJCQUFxQkEsRUFBSSxXQUV2QixhQUE2Q0MsRUFBa0JDLEVBQVMsR0FDWixJQUQvQ0MsRUFBSSxFQUFKQSxLQUFNQyxFQUFJLEVBQUpBLEtBQU1DLEVBQUssRUFBTEEsTUFBT0MsRUFBSyxFQUFMQSxNQUFPQyxFQUFHLEVBQUhBLElBQ2xDQyxFQUFlLEVBQWZBLGdCQUFpQkMsRUFBaUIsRUFBakJBLGtCQUFtQkMsRUFBZSxFQUFmQSxpQiw0RkFBZSxTQUN0REMsS0FBS0Msa0JBQW9CWCxFQUN6QlUsS0FBS0UsTUFBUVYsRUFDYlEsS0FBS0csTUFBUVYsRUFDYk8sS0FBS0ksaUJBQW1CUCxFQUN4QkcsS0FBS0ssT0FBU1gsRUFDZE0sS0FBS00sV0FBYVosRUFBTWEsT0FDeEJQLEtBQUtRLG1CQUFxQlYsRUFDMUJFLEtBQUtTLE9BQVNkLEVBQU1DLElBQ3BCSSxLQUFLSixJQUFNQSxFQUNYSSxLQUFLVSxpQkFBbUJYLEVBQ3hCQyxLQUFLVyxRQUFVWCxLQUFLWSxhQUNwQlosS0FBS2EsUUFBVXRCLENBQ2pCLEMsUUFxR0MsTyxFQW5HRCxHLEVBQUEsMkJBQ0EsV0FDRVMsS0FBS2MsVUFBWUMsU0FBU0MsY0FBY2hCLEtBQUtDLG1CQUFtQmdCLFFBQVFELGNBQWMsWUFDdEZoQixLQUFLa0IsTUFBUWxCLEtBQUtjLFVBQVVLLFdBQVUsR0FDdENuQixLQUFLb0IsT0FBU3BCLEtBQUtrQixNQUFNRixjQUFjLG1CQUN2Q2hCLEtBQUtxQixNQUFRckIsS0FBS2tCLE1BQU1GLGNBQWMsbUJBQ3RDaEIsS0FBS3NCLFlBQWN0QixLQUFLa0IsTUFBTUYsY0FBYyxzQkFDNUNoQixLQUFLdUIsY0FBZ0J2QixLQUFLa0IsTUFBTUYsY0FBYyx3QkFDOUNoQixLQUFLd0IsYUFBZXhCLEtBQUtrQixNQUFNRixjQUFjLHlCQUMvQyxHQUVBLHlCQUNBLFdBQ01oQixLQUFLUyxTQUFXVCxLQUFLYSxTQUN2QmIsS0FBS3VCLGNBQWNFLFFBRXZCLEdBRUEsd0JBQ0EsV0FBYSxXQUNQQyxHQUFPLEVBTVgsT0FMQTFCLEtBQUtLLE9BQU9zQixTQUFRLFNBQUFDLEdBQ2RBLEVBQUtoQyxNQUFRLEVBQUtpQixVQUNwQmEsR0FBTyxFQUVYLElBQ09BLENBQ1QsR0FFQSxzQkFDQSxXQUNFMUIsS0FBS3NCLFlBQVlPLFVBQVVDLElBQUksMkJBQ2pDLEdBRUEseUJBQ0EsV0FDRTlCLEtBQUtzQixZQUFZTyxVQUFVSixPQUFPLDJCQUNwQyxHQUVBLHdCQUNBLFNBQVdNLEdBQ1QvQixLQUFLZ0MsY0FBY0QsR0FFaEIvQixLQUFLVyxRQUNOWCxLQUFLaUMsY0FFTGpDLEtBQUtrQyxXQUdQbEMsS0FBS1csU0FBV1gsS0FBS1csT0FDdkIsR0FFQSwyQkFDQSxTQUFjb0IsR0FDWi9CLEtBQUt3QixhQUFhVyxZQUFjSixDQUNsQyxHQUVBLHNCQUNBLFdBQ0UvQixLQUFLb0IsT0FBT2dCLElBQU1wQyxLQUFLRyxNQUN2QkgsS0FBS29CLE9BQU9pQixJQUFNckMsS0FBS0UsTUFDdkJGLEtBQUtxQixNQUFNYyxZQUFjbkMsS0FBS0UsTUFDOUJGLEtBQUtnQyxjQUFjaEMsS0FBS00sWUFFcEJOLEtBQUtXLFNBQVdYLEtBQUtrQyxVQUMzQixHQUVBLG9CQUNBLFdBQ0VsQyxLQUFLa0IsTUFBTU8sU0FDWHpCLEtBQUtrQixNQUFRLElBQ2YsR0FFQSwyQkFDQSxXQUFnQixXQUNkbEIsS0FBS3NCLFlBQVlnQixpQkFBaUIsUUFBU3RDLEtBQUtVLGtCQUNoRFYsS0FBS3VCLGNBQWNlLGlCQUFpQixRQUFTdEMsS0FBS1Esb0JBQ2xEUixLQUFLb0IsT0FBT2tCLGlCQUFpQixTQUFTLFNBQUFDLEdBQ3BDLEVBQUtuQyxpQkFBaUJtQyxFQUN4QixHQUNGLEdBRUEseUJBQ0EsV0FDRSxJQUFNQyxFQUFPLENBQUMsRUFJZCxPQUhBQSxFQUFLL0MsS0FBT08sS0FBS0csTUFDakJxQyxFQUFLQyxLQUFPekMsS0FBS3FCLE1BQU1jLFlBRWhCSyxDQUNULEdBRUEsd0JBQ0EsV0FNRSxPQUxBeEMsS0FBSzBDLGVBQ0wxQyxLQUFLMkMsY0FDTDNDLEtBQUs0QyxXQUNMNUMsS0FBSzZDLGdCQUVFN0MsS0FBS2tCLEtBQ2QsTSxvRUFBQyxFQXJIc0IsRyx1cUJDQUo0QixFQUFhLFdBRWhDLFdBQVlDLEVBQVFDLEksNEZBQU0sU0FDeEJoRCxLQUFLaUQsUUFBVUYsRUFDZi9DLEtBQUtrRCxNQUFRRixFQUNiaEQsS0FBS21ELFdBQWFDLE1BQU1DLEtBQUtyRCxLQUFLa0QsTUFBTUksaUJBQWlCdEQsS0FBS2lELFFBQVFNLGdCQUN0RXZELEtBQUt3RCxlQUFpQnhELEtBQUtrRCxNQUFNbEMsY0FBY2hCLEtBQUtpRCxRQUFRUSxxQkFDOUQsQyxRQWdFQyxPLEVBOURELEcsRUFBQSw4QkFDQSxTQUFnQkMsR0FDZCxJQUFNQyxFQUFlM0QsS0FBS2tELE1BQU1sQyxjQUFjLElBQUQsT0FBSzBDLEVBQWFFLEdBQUUsV0FFakVELEVBQWF4QixZQUFjdUIsRUFBYUcsa0JBQ3hDRixFQUFhOUIsVUFBVUMsSUFBSTlCLEtBQUtpRCxRQUFRYSxZQUN4Q0osRUFBYTdCLFVBQVVDLElBQUk5QixLQUFLaUQsUUFBUWMsZ0JBQzFDLEdBRUEsNkJBQ0EsU0FBZ0JMLEdBQ2QsSUFBTUMsRUFBZTNELEtBQUtrRCxNQUFNbEMsY0FBYyxJQUFELE9BQUswQyxFQUFhRSxHQUFFLFdBRWpFRCxFQUFheEIsWUFBYyxHQUMzQndCLEVBQWE5QixVQUFVSixPQUFPekIsS0FBS2lELFFBQVFhLFlBQzNDSixFQUFhN0IsVUFBVUosT0FBT3pCLEtBQUtpRCxRQUFRYyxnQkFDN0MsR0FFQSxpQ0FDQSxTQUFvQkwsR0FDYkEsRUFBYU0sU0FBU0MsTUFHekJqRSxLQUFLa0UsZ0JBQWdCUixHQUZyQjFELEtBQUttRSxnQkFBZ0JULEVBSXpCLEdBRUEsZ0NBQ0EsV0FBcUIsV0FDbkIxRCxLQUFLb0Usb0JBRUxwRSxLQUFLbUQsV0FBV3hCLFNBQVEsU0FBQStCLEdBQ3RCQSxFQUFhcEIsaUJBQWlCLFNBQVMsV0FDckMsRUFBSytCLG9CQUFvQlgsR0FDekIsRUFBS1UsbUJBQ1AsR0FDRixHQUNGLEdBRUEsOEJBQ0EsV0FDRSxPQUFPcEUsS0FBS21ELFdBQVdtQixNQUFLLFNBQUFaLEdBQzFCLE9BQVNBLEVBQWFNLFNBQVNDLEtBQ2pDLEdBQ0YsR0FFQSwrQkFDQSxXQUNNakUsS0FBS3VFLG9CQUNQdkUsS0FBS3dELGVBQWUzQixVQUFVQyxJQUFJOUIsS0FBS2lELFFBQVF1QixxQkFDL0N4RSxLQUFLd0QsZUFBZTNCLFVBQVVKLE9BQU96QixLQUFLaUQsUUFBUXdCLGVBQ2xEekUsS0FBS3dELGVBQWVrQixVQUFXLElBRS9CMUUsS0FBS3dELGVBQWUzQixVQUFVSixPQUFPekIsS0FBS2lELFFBQVF1QixxQkFDbER4RSxLQUFLd0QsZUFBZTNCLFVBQVVDLElBQUk5QixLQUFLaUQsUUFBUXdCLGVBQy9DekUsS0FBS3dELGVBQWVrQixVQUFXLEVBRW5DLEdBRUEsOEJBQ0EsV0FDRTFFLEtBQUsyRSxvQkFDUCxNLG9FQUFDLEVBdkUrQixHLHVxQkNBYkMsRUFBTyxXQUMxQixhQUFpQ0MsR0FBbUIsSUFBdENDLEVBQUssRUFBTEEsTUFBT0MsRUFBUSxFQUFSQSxVLDRGQUFRLFNBQzNCL0UsS0FBS2dGLE9BQVNGLEVBQ2Q5RSxLQUFLaUYsVUFBWUYsRUFDakIvRSxLQUFLa0YsbUJBQXFCTCxFQUUxQjdFLEtBQUttRixXQUFhcEUsU0FBU0MsY0FBY2hCLEtBQUtrRixtQkFDaEQsQyxRQVlDLE8sRUFWRCxHLEVBQUEsc0JBQ0EsU0FBUUUsR0FDTnBGLEtBQUttRixXQUFXRSxRQUFRRCxFQUMxQixHQUVBLDZCQUNBLFdBQWtCLFdBQ2hCcEYsS0FBS2dGLE9BQU9NLFVBQVUzRCxTQUFRLFNBQUE0RCxHQUM1QixFQUFLTixVQUFVTSxFQUNqQixHQUNGLE0sb0VBQUMsRUFuQnlCLEcsbXFCQ0E1QixJQUVxQkMsRUFBSyxXQUN4QixXQUFZQyxJLDRGQUFlLFNBQ3pCekYsS0FBSzBGLE9BQVMzRSxTQUFTQyxjQUFjeUUsR0FDckN6RixLQUFLMkYsZ0JBQWtCM0YsS0FBSzJGLGdCQUFnQkMsS0FBSzVGLE1BQ2pEQSxLQUFLNkYsY0FBZ0I3RixLQUFLMEYsT0FBTzFFLGNBQWMsb0JBQy9DaEIsS0FBSzhGLGFBQWU5RixLQUFLMEYsT0FBTzFFLGNBQWMsb0JBQ2hELEMsUUF1Q0MsTyxFQXJDRCxHLEVBQUEsbUJBQ0EsV0FDRWhCLEtBQUswRixPQUFPN0QsVUFBVUMsSUFBSSxnQkFDMUJmLFNBQVN1QixpQkFBaUIsVUFBV3RDLEtBQUsyRixnQkFDNUMsR0FFQSxtQkFDQSxXQUNFM0YsS0FBSzBGLE9BQU83RCxVQUFVSixPQUFPLGdCQUM3QlYsU0FBU2dGLG9CQUFvQixVQUFXL0YsS0FBSzJGLGdCQUMvQyxHQUVBLDZCQUNBLFNBQWdCcEQsR0F2Qk8sV0F3QmpCQSxFQUFJeUQsS0FDTmhHLEtBQUtpRyxPQUVULEdBRUEsK0JBQ0EsV0FBb0IsV0FDbEJqRyxLQUFLOEYsYUFBYXhELGlCQUFpQixTQUFTLFdBQVEsRUFBSzJELE9BQVMsSUFFbEVqRyxLQUFLMEYsT0FBT3BELGlCQUFpQixhQUFhLFNBQUFDLEdBQ3JDQSxFQUFJMkQsU0FBVzNELEVBQUk0RCxlQUNwQixFQUFLRixPQUVULEdBQ0YsR0FFQSwyQkFDQSxTQUFjRyxHQUVWcEcsS0FBSzZGLGNBQWMxRCxZQURqQmlFLEVBQytCcEcsS0FBSzZGLGNBQWNRLFFBQVFDLGtCQUUzQnRHLEtBQUs2RixjQUFjUSxRQUFRRSxVQUVoRSxNLG9FQUFDLEVBN0N1QixHLGd2Q0NGRSxJQUVQQyxFQUFjLGEscVJBQUEsVSxRQUFBLEcsRUFBQSxFLHFyQkFDakMsV0FBWWYsR0FBZSxNQUdxQyxPLDRGQUhyQyxVQUN6QixjQUFNQSxJQUNEckUsT0FBUyxFQUFLc0UsT0FBTzFFLGNBQWMsaUJBQ3hDLEVBQUtLLE1BQVEsRUFBS3FFLE9BQU8xRSxjQUFjLHVCQUF1QixDQUNoRSxDQVFDLE8sRUFORCxHLEVBQUEsbUJBQ0EsWUFBcUIsSUFBZHZCLEVBQUksRUFBSkEsS0FBTWdELEVBQUksRUFBSkEsS0FDWHpDLEtBQUtvQixPQUFPZ0IsSUFBTTNDLEVBQ2xCTyxLQUFLb0IsT0FBT2lCLElBQU1JLEVBQ2xCekMsS0FBS3FCLE1BQU1jLFlBQWNNLEVBQ3pCLHdDQUNGLE0sb0VBQUMsRUFiZ0MsQ0FBUytDLEcsZ3ZDQ0ZoQixJQUVQaUIsRUFBYSxhLHFSQUFBLFUsUUFBQSxHLEVBQUEsRSxxckJBQ2hDLFdBQVloQixFQUFlaUIsR0FBa0IsTUFLd0IsTyw0RkFMeEIsVUFDM0MsY0FBTWpCLElBQ0RrQixrQkFBb0JELEVBQ3pCLEVBQUt4RCxNQUFRLEVBQUt3QyxPQUFPMUUsY0FBYyxnQkFDdkMsRUFBS21DLFdBQWFDLE1BQU1DLEtBQUssRUFBS3FDLE9BQU9wQyxpQkFBaUIsaUJBQzFELEVBQUt1QyxjQUFnQixFQUFLSCxPQUFPMUUsY0FBYyxvQkFBb0IsQ0FDckUsQ0FtQ0MsTyxFQWpDRCxHLEVBQUEsOEJBQ0EsV0FDRSxJQUFNNEYsRUFBa0IsQ0FBQyxFQUt6QixPQUpBNUcsS0FBS21ELFdBQVd4QixTQUFRLFNBQUFrRixHQUN0QkQsRUFBZ0JDLEVBQU1ySCxNQUFRcUgsRUFBTUMsS0FDdEMsSUFFT0YsQ0FDVCxHQUVBLCtCQUNBLFdBQW9CLFdBQ2xCLHNEQUNBNUcsS0FBS2tELE1BQU1aLGlCQUFpQixVQUFVLFNBQUNDLEdBQ3JDQSxFQUFJd0UsaUJBQ0osSUFBTXZFLEVBQU8sRUFBS3dFLGtCQUNsQixFQUFLTCxrQkFBa0JuRSxFQUN4QixHQUNILEdBRUEsNEJBQ0EsU0FBZUEsR0FDYixJQUFJeUUsRUFBUSxFQUNaLElBQUssSUFBSWpCLEtBQU94RCxFQUNkeEMsS0FBS21ELFdBQVc4RCxHQUFPSCxNQUFRdEUsRUFBS3dELEdBQ3BDaUIsR0FFSixHQUVBLG1CQUNBLFdBQ0UsMENBQ0FqSCxLQUFLa0QsTUFBTWdFLE9BQ2IsTSxvRUFBQyxFQTFDK0IsQ0FBUzFCLEcsdXFCQ0Z0QjJCLEVBQVEsV0FDM0IsY0FBMkQsSUFBN0NDLEVBQVksRUFBWkEsYUFBY0MsRUFBVyxFQUFYQSxZQUFhQyxFQUFjLEVBQWRBLGdCLDRGQUFjLFNBQ3JEdEgsS0FBS0UsTUFBUWEsU0FBU0MsY0FBY29HLEdBQ3BDcEgsS0FBS3VILEtBQU94RyxTQUFTQyxjQUFjcUcsR0FDbkNySCxLQUFLd0gsUUFBVXpHLFNBQVNDLGNBQWNzRyxHQUN0Q3RILEtBQUs0RCxFQUNQLEMsUUFzQkMsTyxFQXBCRCxHLEVBQUEsMEJBQ0EsV0FDRSxJQUFNcEIsRUFBTyxDQUFDLEVBSWQsT0FIQUEsRUFBS2hELEtBQU9RLEtBQUtFLE1BQU1pQyxZQUN2QkssRUFBS2lGLElBQU16SCxLQUFLdUgsS0FBS3BGLFlBRWRLLENBQ1QsR0FFQSx5QkFDQSxZQUEwQyxJQUE1QmhELEVBQUksRUFBSkEsS0FBTWtJLEVBQUssRUFBTEEsTUFBT0MsRUFBTSxFQUFOQSxPQUFRL0gsRUFBRyxFQUFIQSxJQUNqQ0ksS0FBS0UsTUFBTWlDLFlBQWMzQyxFQUN6QlEsS0FBS3VILEtBQUtwRixZQUFjdUYsRUFDeEIxSCxLQUFLNEgsVUFBVSxDQUFFRCxPQUFBQSxJQUNqQjNILEtBQUs0RCxHQUFLaEUsQ0FDWixHQUVBLHVCQUNBLFlBQXNCLElBQVYrSCxFQUFNLEVBQU5BLE9BQ1YzSCxLQUFLd0gsUUFBUXBGLElBQU11RixDQUNyQixNLG9FQUFDLEVBNUIwQixHLG1xQkNBN0IsSUFBTUUsRUFBaUIsU0FBQUMsR0FDckIsT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBTyxJQUFJQyxNQUFNLFdBQUQsT0FBWUwsRUFBSU0sU0FDakQsRUFFcUJDLEVBQUcsV0FDdEIsY0FBNkIsSUFBZkMsRUFBRyxFQUFIQSxJQUFLQyxFQUFPLEVBQVBBLFMsNEZBQU8sU0FDeEJ2SSxLQUFLd0ksS0FBT0YsRUFDWnRJLEtBQUt5SSxTQUFXRixDQUNsQixDLFFBcUZDLE8sRUFuRkQsRyxFQUFBLDBCQUNBLFdBQ0UsT0FBT0csTUFBTSxHQUFELE9BQUkxSSxLQUFLd0ksS0FBSSxhQUFhLENBQUVELFFBQVN2SSxLQUFLeUksV0FDckRFLEtBQUtkLEVBQ1IsR0FFQSx5QkFDQSxZQUE2QixJQUFmckksRUFBSSxFQUFKQSxLQUFNa0ksRUFBSyxFQUFMQSxNQUNsQixPQUFPZ0IsTUFBTSxHQUFELE9BQUkxSSxLQUFLd0ksS0FBSSxhQUFhLENBQ3BDRCxRQUFTdkksS0FBS3lJLFNBQ2RHLE9BQVEsUUFDUkMsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQnZKLEtBQU1BLEVBQ05rSSxNQUFPQSxNQUdWaUIsS0FBS2QsRUFDUixHQUVBLGlDQUNBLFdBQ0UsT0FBT2EsTUFBTSxHQUFELE9BQUkxSSxLQUFLd0ksS0FBSSxVQUFVLENBQUVELFFBQVN2SSxLQUFLeUksV0FDbERFLEtBQUtkLEVBQ1IsR0FFQSx5QkFDQSxZQUE2QixJQUFmckksRUFBSSxFQUFKQSxLQUFNQyxFQUFJLEVBQUpBLEtBQ2xCLE9BQU9pSixNQUFNLEdBQUQsT0FBSTFJLEtBQUt3SSxLQUFJLFVBQVUsQ0FDakNELFFBQVN2SSxLQUFLeUksU0FDZEcsT0FBUSxPQUNSQyxLQUFNQyxLQUFLQyxVQUFVLENBQ25CdkosS0FBTUEsRUFDTkMsS0FBTUEsTUFHVGtKLEtBQUtkLEVBQ1IsR0FFQSx3QkFDQSxTQUFXdEMsR0FDVCxPQUFPbUQsTUFBTSxHQUFELE9BQUkxSSxLQUFLd0ksS0FBSSxrQkFBVWpELEVBQUszRixLQUFPLENBQzdDMkksUUFBU3ZJLEtBQUt5SSxTQUNkRyxPQUFRLFdBRVRELE1BQUssU0FBQ2IsR0FDTCxPQUFJQSxFQUFJQyxHQUNDeEMsRUFLRjBDLFFBQVFDLE9BQU8sSUFBSUMsTUFBTSxXQUFELE9BQVlMLEVBQUlNLFNBQ2pELEdBQ0YsR0FFQSxxQkFDQSxZQUFpQixJQUFQeEksRUFBRyxFQUFIQSxJQUNSLE9BQU84SSxNQUFNLEdBQUQsT0FBSTFJLEtBQUt3SSxLQUFJLGtCQUFVNUksRUFBRyxVQUFVLENBQzlDMkksUUFBU3ZJLEtBQUt5SSxTQUNkRyxPQUFRLFFBRVRELEtBQUtkLEVBQ1IsR0FFQSx3QkFDQSxZQUFvQixJQUFQakksRUFBRyxFQUFIQSxJQUNYLE9BQU84SSxNQUFNLEdBQUQsT0FBSTFJLEtBQUt3SSxLQUFJLGtCQUFVNUksRUFBRyxVQUFVLENBQzlDMkksUUFBU3ZJLEtBQUt5SSxTQUNkRyxPQUFRLFdBRVRELEtBQUtkLEVBQ1IsR0FFQSx1QkFDQSxZQUFvQixJQUFScEksRUFBSSxFQUFKQSxLQUNWLE9BQU9pSixNQUFNLEdBQUQsT0FBSTFJLEtBQUt3SSxLQUFJLG9CQUFvQixDQUMzQ0QsUUFBU3ZJLEtBQUt5SSxTQUNkRyxPQUFRLFFBQ1JDLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJwQixPQUFRbEksTUFHWGtKLEtBQUtkLEVBQ1IsTSxvRUFBQyxFQXpGcUIsR0NQbEJtQixFQUFtQixDQUN2QkMsYUFBYyxlQUNkMUYsY0FBZSxlQUNmRSxxQkFBc0IsbUJBQ3RCZSxvQkFBcUIsMkJBQ3JCVCxnQkFBaUIseUJBQ2pCRCxXQUFZLHVCQUNaVyxjQUFlLGtCQVdYeUUsRUFBWSxDQUNoQkMsVUFBVyxZQUNYQyxVQUFXLGlCQUNYQyxTQUFVLHdCQUNWMUIsT0FBUSxtQkFDUjJCLGFBQWMsc0JBQ2RDLFVBQVcsbUJBQ1hDLGFBQWMsc0JBQ2RDLGFBQWMsc0JBQ2RDLFlBQWEscUJBQ2JDLGVBQWdCLFNBTVpDLEVBQXlCN0ksU0FBU0MsY0FBYyx5QkFDaEQ2SSxFQUE4QjlJLFNBQVNDLGNBQWMsd0JBQ3JEOEksRUFBZS9JLFNBQVNDLGNBQWMsNEJBR3RDK0ksRUFBcUJoSixTQUFTQyxjQUFjLDJDQUM1Q2dKLEVBQWtCakosU0FBU0MsY0FBYyw0Q0FDekNpSixFQUFvQmxKLFNBQVNDLGNBQWMsMEMsZ3ZDQ3pDckIsSUFFUGtKLEVBQVksYSxxUkFBQSxVLFFBQUEsRyxFQUFBLEUscXJCQUMvQixXQUFZekUsRUFBZTBFLEdBQWlCLE1BR2EsTyw0RkFIYixVQUMxQyxjQUFNMUUsSUFDRDJFLFFBQVVELEVBQ2YsRUFBS2pILE1BQVEsRUFBS3dDLE9BQU8xRSxjQUFjLGdCQUFnQixDQUN6RCxDQWdCQyxPLEVBZEQsRyxFQUFBLG1CQUNBLFNBQUt1RSxHQUNIdkYsS0FBS3VGLEtBQU9BLEVBQ1osd0NBQ0YsR0FFQSwrQkFDQSxXQUFvQixXQUNsQixzREFFQXZGLEtBQUtrRCxNQUFNWixpQkFBaUIsVUFBVSxTQUFDQyxHQUNyQ0EsRUFBSXdFLGlCQUNKLEVBQUtxRCxRQUFRLEVBQUs3RSxLQUNwQixHQUNGLE0sb0VBQUMsRUFyQjhCLENBQVNDLEdDbUIxQyxTQUFTNkUsRUFBYTlFLEdBQ3BCLElBQU1ILEVBQU8sSUFBSS9GLEVBQUtrRyxFQUFNMkQsRUFBVVMsZUFBZ0JXLEVBQVMxRyxHQUFJLENBQ2pFL0QsZ0JBQWlCLFdBQ1QwSyxHQUFXQyxLQUFLcEYsRUFBS3FGLGNBQzdCLEVBQ0EzSyxrQkFBbUIsV0FDakI0SyxHQUFtQkYsS0FBS3BGLEVBQzFCLEVBQ0FyRixnQkFBaUIsV0FDVnFGLEVBQUt6RSxRQUtSZ0ssRUFBSUMsV0FBV3hGLEdBQ2R1RCxNQUFLLFNBQUFiLEdBQ0oxQyxFQUFLeUYsV0FBVy9DLEVBQUlwSSxNQUFNYSxPQUFRLElBTnBDb0ssRUFBSUcsUUFBUTFGLEdBQ1h1RCxNQUFLLFNBQUFiLEdBQ0oxQyxFQUFLeUYsV0FBVy9DLEVBQUlwSSxNQUFNYSxPQUFRLEdBTXhDLElBQ0YsT0FBTzZFLEVBQUsyRixZQUNkLENBVUEsSUFDSUMsRUFERUwsRUFBTSxJQUFJdEMsRUZ6Q0UsQ0FDaEJDLElBQUssOENBQ0xDLFFBQVMsQ0FDUCxlQUFnQixtQkFDaEIwQyxjQUFlLDBDRXdDbkJoRCxRQUFRaUQsSUFBSSxDQUNWUCxFQUFJUSxjQUNIeEMsTUFBSyxTQUFBbkcsR0FDSjhILEVBQVNjLFlBQVk1SSxFQUN2QixJQUNDNkksT0FBTSxXQUNMQyxRQUFRQyxJQUFJLElBQUlwRCxNQUFNLG1CQUN4QixJQUVBd0MsRUFBSWEsc0JBQ0g3QyxNQUFLLFNBQUFuRyxJQUVKd0ksRUFBZ0IsSUFBSXBHLEVBQVMsQ0FDM0JFLE1BQU90QyxFQUNQdUMsU0FBVSxTQUFDUSxHQUNULElBQU1ILEVBQU9pRixFQUFhOUUsR0FDMUJ5RixFQUFjUyxRQUFRckcsRUFDeEIsR0FDQThELEVBQVVDLFlBR0F1QyxpQkFDZCxNQUlGLElBQU1DLEVBQXVCLElBQUk3SSxFQUFja0csRUFBa0JlLEdBQzNENkIsRUFBb0IsSUFBSTlJLEVBQWNrRyxFQUFrQmdCLEdBQ3hENkIsRUFBc0IsSUFBSS9JLEVBQWNrRyxFQUFrQmlCLEdBRzFESyxFQUFXLElBQUluRCxFQUFTLENBQzVCQyxhQUFjOEIsRUFBVUUsVUFDeEIvQixZQUFhNkIsRUFBVUcsU0FDdkIvQixlQUFnQjRCLEVBQVV2QixTQUl0QjJCLEVBQWUsSUFBSTdDLEVBQWN5QyxFQUFVSSxjQUFjLFNBQUM5RyxHQUM5RDhHLEVBQWF3QyxlQUFjLEdBQzNCbkIsRUFBSW9CLFlBQVl2SixHQUNmbUcsTUFBSyxTQUFDbkcsR0FDTDhILEVBQVNjLFlBQVk1SSxHQUNyQjhHLEVBQWFyRCxPQUNmLElBQ0MrRixTQUFRLFdBQVExQyxFQUFhd0MsZUFBYyxFQUFRLEdBQ3RELElBRU12QyxFQUFZLElBQUk5QyxFQUFjeUMsRUFBVUssV0FBVyxTQUFDL0csR0FDeEQrRyxFQUFVdUMsZUFBYyxHQUN4Qm5CLEVBQUlzQixZQUFZekosR0FDZm1HLE1BQUssU0FBQ25HLEdBQ0wsSUFBTTRDLEVBQU9pRixFQUFhN0gsR0FDMUJ3SSxFQUFjUyxRQUFRckcsR0FDdEJtRSxFQUFVdEQsT0FBUSxJQUNuQitGLFNBQVEsV0FBUXpDLEVBQVV1QyxlQUFjLEVBQVEsR0FDakQsSUFFSXBDLEdBQWMsSUFBSWpELEVBQWN5QyxFQUFVUSxhQUFhLFNBQUNsSCxHQUM1RGtILEdBQVlvQyxlQUFjLEdBQzFCbkIsRUFBSS9DLFVBQVVwRixHQUNibUcsTUFBSyxTQUFBYixHQUFTd0MsRUFBUzFDLFVBQVVFLEVBQU0sSUFDdkNhLE1BQUssV0FBUWUsR0FBWXpELE9BQVMsSUFDbEMrRixTQUFRLFdBQVF0QyxHQUFZb0MsZUFBYyxFQUFRLEdBQ25ELElBRUlwQixHQUFxQixJQUFJUixFQUFhaEIsRUFBVU8sY0FBZSxTQUFDbEUsR0FDcEVtRixHQUFtQm9CLGVBQWMsR0FDakNuQixFQUFJdUIsV0FBVzNHLEdBQ2RvRCxNQUFLLFNBQUF2RCxHQUFVQSxFQUFLK0csUUFBUyxJQUM3QnhELE1BQUssV0FBUStCLEdBQW1CekUsT0FBUyxJQUN6QytGLFNBQVEsV0FBUXRCLEdBQW1Cb0IsZUFBYyxFQUFRLEdBQzFELElBRUl2QixHQUFhLElBQUkvRCxFQUFlMEMsRUFBVU0sY0FJOUNGLEVBQWE4QyxvQkFDYjdDLEVBQVU2QyxvQkFDVjdCLEdBQVc2QixvQkFDWDFCLEdBQW1CMEIsb0JBQ25CMUMsR0FBWTBDLG9CQUtkOUMsRUFBYStDLGVBQWUvQixFQUFTZ0MsZUFHckMxQyxFQUF1QnRILGlCQUFpQixTQUFTLFdBQy9DZ0gsRUFBYStDLGVBQWUvQixFQUFTZ0MsZUFDckNoRCxFQUFha0IsTUFBTSxJQUVyQlgsRUFBNEJ2SCxpQkFBaUIsU0FBUyxXQUNwRHNKLEVBQWtCeEgsb0JBQ2xCbUYsRUFBVWlCLE1BQ1osSUFFQVYsRUFBYXhILGlCQUFpQixTQUFTLFdBQ3JDb0gsR0FBWWMsTUFDZCxJQTlHRW1CLEVBQXFCWSxtQkFDckJYLEVBQWtCVyxtQkFDbEJWLEVBQW9CVSxrQiIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cENvbmZpcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHtuYW1lLCBsaW5rLCBsaWtlcywgb3duZXIsIF9pZH0sIHRlbXBsYXRlU2VsZWN0b3IsIHBhZ2VPd25lcixcclxuICAgICB7IGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2xpY2ssIGhhbmRsZUxpa2VDbGljayB9KSB7XHJcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcclxuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGxpbms7XHJcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xyXG4gICAgdGhpcy5fbGlrZUNvdW50ID0gbGlrZXMubGVuZ3RoO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcclxuICAgIHRoaXMuX293bmVyID0gb3duZXIuX2lkO1xyXG4gICAgdGhpcy5faWQgPSBfaWQ7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgICB0aGlzLmlzTGlrZWQgPSB0aGlzLl9jaGVja0xpa2UoKTtcclxuICAgIHRoaXMuX3VzZXJJZCA9IHBhZ2VPd25lcjtcclxuICB9XHJcbiAgXHJcbiAgLy/Qn9C+0LvRg9GH0LXQvdC40LUg0YjQsNCx0LvQvtC90LAg0LrQsNGA0YLQvtGA0YfQutC4INC4INCy0YHQtdGFINC90YPQttC90YvRhSDRjdC70LXQvNC10L3RgtC+0LJcclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICB0aGlzLl90ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcikuY29udGVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudCcpO1xyXG4gICAgdGhpcy5fY2FyZCA9IHRoaXMuX3RlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKTtcclxuICAgIHRoaXMuX3RleHQgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X190aXRsZScpO1xyXG4gICAgdGhpcy5fYnV0dG9uTGlrZSA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYnRuJyk7XHJcbiAgICB0aGlzLl9idXR0b25EZWxldGUgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUtYnRuJyk7XHJcbiAgICB0aGlzLl9saWtlQ291bnRlciA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtY291bnRlcicpO1xyXG4gIH1cclxuXHJcbiAgLy/Qn9GA0L7QstC10YDQutCwINGP0LLQu9GP0LXRgtGB0Y8g0LvQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LLQu9Cw0LTQtdC70YzRhtC10Lwg0LrQsNGA0YLQvtGH0LrQuFxyXG4gIF9jaGVja093bmVyKCkge1xyXG4gICAgaWYgKHRoaXMuX293bmVyICE9PSB0aGlzLl91c2VySWQpIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRGVsZXRlLnJlbW92ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy/Qn9GA0L7QstC10YDQutCwINC70LDQudC60LDQuyDQu9C4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQutCw0YDRgtC+0YfQutGDXHJcbiAgX2NoZWNrTGlrZSgpIHtcclxuICAgIGxldCBsaWtlID0gZmFsc2U7XHJcbiAgICB0aGlzLl9saWtlcy5mb3JFYWNoKHVzZXIgPT4ge1xyXG4gICAgICBpZiAodXNlci5faWQgPT09IHRoaXMuX3VzZXJJZCkge1xyXG4gICAgICAgIGxpa2UgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBsaWtlO1xyXG4gIH1cclxuXHJcbiAgLy/QlNC+0LHQsNCy0LvQtdC90LjQtSDQu9Cw0LnQutCwXHJcbiAgX2FkZExpa2UoKSB7XHJcbiAgICB0aGlzLl9idXR0b25MaWtlLmNsYXNzTGlzdC5hZGQoJ2VsZW1lbnRfX2xpa2UtYnRuX2FjdGl2ZScpO1xyXG4gIH1cclxuXHJcbiAgLy/QodC90Y/RgtC40LUg0LvQsNC50LrQsFxyXG4gIF9yZW1vdmVMaWtlKCkge1xyXG4gICAgdGhpcy5fYnV0dG9uTGlrZS5jbGFzc0xpc3QucmVtb3ZlKCdlbGVtZW50X19saWtlLWJ0bl9hY3RpdmUnKTtcclxuICB9XHJcblxyXG4gIC8v0JLRi9Cx0L7RgCDQtNC+0LHQsNCy0LvQtdC90LjRjy/RgdC90Y/RgtC40Y8g0LvQsNC50LrQsCDQuCDRg9GB0YLQsNC90L7QstC60LAg0LrQvtC70LjRh9C10YHRgtCy0LAg0LvQsNC50LrQvtCyXHJcbiAgdG9nZ2xlTGlrZShjb3VudCkge1xyXG4gICAgdGhpcy5zZXRMaWtlc0NvdW50KGNvdW50KTtcclxuXHJcbiAgICBpZih0aGlzLmlzTGlrZWQpIHtcclxuICAgICAgdGhpcy5fcmVtb3ZlTGlrZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYWRkTGlrZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuaXNMaWtlZCA9ICF0aGlzLmlzTGlrZWRcclxuICB9XHJcblxyXG4gIC8v0KPRgdGC0LDQvdC+0LLQutCwINC60L7Qu9C40YfQtdGB0YLQstCwINC70LDQudC60L7QslxyXG4gIHNldExpa2VzQ291bnQoY291bnQpIHtcclxuICAgIHRoaXMuX2xpa2VDb3VudGVyLnRleHRDb250ZW50ID0gY291bnQ7XHJcbiAgfVxyXG5cclxuICAvL9Cf0LXRgNC10LTQsNGH0LAg0LrQsNGA0YLQvtGH0LrQtSDQuNC30L7QsdGA0LDQttC10L3QuNGPINC4INC30LDQs9C+0LvQvtCy0LrQsFxyXG4gIF9zZXREYXRhKCkge1xyXG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2ltYWdlLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl90ZXh0LnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuc2V0TGlrZXNDb3VudCh0aGlzLl9saWtlQ291bnQpO1xyXG5cclxuICAgIGlmICh0aGlzLmlzTGlrZWQpIHsgdGhpcy5fYWRkTGlrZSgpIH1cclxuICB9XHJcblxyXG4gIC8v0KPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XHJcbiAgZGVsZXRlKCkge1xyXG4gICAgdGhpcy5fY2FyZC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2NhcmQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgLy/QlNC+0LHQsNCy0LvQtdC90LjQtSDRgdC70YPRiNCw0YLQtdC70LXQuVxyXG4gIF9zZXRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9idXR0b25MaWtlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlTGlrZUNsaWNrKTtcclxuICAgIHRoaXMuX2J1dHRvbkRlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKTtcclxuICAgIHRoaXMuX2ltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZ0ID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKGV2dCk7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLy/Qn9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINC60LDRgNGC0L7Rh9C60LhcclxuICBnZXRDYXJkRGF0YSgpIHtcclxuICAgIGNvbnN0IGRhdGEgPSB7fTtcclxuICAgIGRhdGEubGluayA9IHRoaXMuX2xpbms7XHJcbiAgICBkYXRhLnRleHQgPSB0aGlzLl90ZXh0LnRleHRDb250ZW50O1xyXG5cclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH1cclxuXHJcbiAgLy/QodC+0LfQtNCw0L3QuNC1INC60LDRgNGC0L7Rh9C60LhcclxuICBjcmVhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX2NoZWNrT3duZXIoKTtcclxuICAgIHRoaXMuX3NldERhdGEoKTtcclxuICAgIHRoaXMuX3NldExpc3RlbmVycygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jYXJkO1xyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG5cclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm0pIHtcclxuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIC8v0J/QvtC60LDQt9Cw0YLRjCDQvtGI0LjQsdC60YNcclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuXHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIC8v0KHQutGA0YvRgtGMINC+0YjQuNCx0LrRg1xyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG5cclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICAvL9Cf0YDQvtCy0LXRgNC60LAg0LLQsNC70LjQtNC90L7RgdGC0Lgg0L/QvtC70Y9cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9CU0L7QsdCw0LLQu9C10L3QuNC1INC+0LHRgNCw0LHQvtGC0YfQuNC60L7QsiDRgdC+0LHRi9GC0LjRjyAnaW5wdXQnINC90LAg0L/QvtC70Y8g0LLQstC+0LTQsFxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dEVsZW1lbnQgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8v0J/RgNC+0LLQtdGA0LrQsCDQvdCw0LvQuNGH0LjRjy/QvtGC0YHRg9GC0YHQstC40Y8g0L3QtdCy0LDQu9C40LTQvdC+0LPQviDQv9C+0LvRjyDQsiDRhNC+0YDQvNC1XHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZShpbnB1dEVsZW1lbnQgPT4ge1xyXG4gICAgICByZXR1cm4gKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvL9CQ0LrRgtC40LLQsNGG0LjRjy/QtNC10LDQutGC0LjQstCw0YbQuNGPINC60L3QvtC/0LrQuCBzdWJtaXRcclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmJ1dHRvbk9wYWNpdHkpXHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5idXR0b25PcGFjaXR5KVxyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9CS0LrQu9GO0YfQtdC90LjQtSDQstCw0LvQuNC00LDRhtC40LhcclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXJTZWxlY3RvciA9IGNvbnRhaW5lclNlbGVjdG9yO1xyXG4gICAgLy/Qn9C+0LvRg9GH0LXQvdC40LUg0LrQvtC90YLQtdC50L3QtdGA0LAg0L/QviDRgdC10LvQtdC60YLQvtGA0YNcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgLy/QnNC10YLQvtC0INC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcclxuICBhZGRJdGVtKGNhcmQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGNhcmQpO1xyXG4gIH1cclxuXHJcbiAgLy/QnNC10YLQvtC0INC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C10LogXCLQuNC3INC60L7RgNC+0LHQutC4XCJcclxuICBhZGRJbml0aWFsSXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5yZXZlcnNlKCkuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KVxyXG4gIH1cclxufSIsImNvbnN0IEtFWV9FU0NBUEVfVkFMVUUgPSAnRXNjYXBlJyBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLl9idXR0b25TdWJtaXQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnRuJyk7XHJcbiAgICB0aGlzLl9idXR0b25DbG9zZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtYnRuJyk7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQg0L7RgtC60YDRi9GC0LjRjyDQvNC+0LTQsNC70YzQvdC+0LPQviDQvtC60L3QsFxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQg0LfQsNC60YDRi9GC0LjRjyDQvNC+0LTQsNC70YzQvdC+0LPQviDQvtC60L3QsFxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgLy/QntCx0YDQsNCx0L7RgtGH0LjQuiDQt9Cw0LrRgNGL0YLQuNGPINC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwINC60LvQsNCy0LjRiNC10LkgXCJFc2NcIlxyXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcclxuICAgIGlmIChldnQua2V5ID09PSBLRVlfRVNDQVBFX1ZBTFVFKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8v0JTQvtCx0LDQstC70LXQvdC40LUg0YHQu9GD0YjQsNGC0LXQu9C10Lkg0YHQvtCx0YvRgtC40LlcclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2J1dHRvbkNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4geyB0aGlzLmNsb3NlKCk7IH0pO1xyXG5cclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGV2dCA9PiB7XHJcbiAgICAgIGlmKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLy/QntGC0L7QsdGA0LDQttC10L3QuNC1INC/0YDQvtGG0LXRgdGB0LAg0LfQsNCz0YDRg9C30LrQuFxyXG4gIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nKSB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvblN1Ym1pdC50ZXh0Q29udGVudCA9IHRoaXMuX2J1dHRvblN1Ym1pdC5kYXRhc2V0LmJ1dHRvbkxvYWRpbmdUZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uU3VibWl0LnRleHRDb250ZW50ID0gdGhpcy5fYnV0dG9uU3VibWl0LmRhdGFzZXQuYnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XHJcbiAgICB0aGlzLl90ZXh0ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19kZXNjcmlwdGlvbicpO1xyXG4gIH1cclxuXHJcbiAgLy/QntGC0LrRgNGL0YLQuNC1INC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwINGBINC/0YDQtdC00LLQsNGA0LjRgtC10LvRjNC90YvQvCDQvdCw0L/QvtC70L3QtdC90LjQtdC8XHJcbiAgb3Blbih7IGxpbmssIHRleHQgfSkge1xyXG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gbGluaztcclxuICAgIHRoaXMuX2ltYWdlLmFsdCA9IHRleHQ7XHJcbiAgICB0aGlzLl90ZXh0LnRleHRDb250ZW50ID0gdGV4dDtcclxuICAgIHN1cGVyLm9wZW4oKVxyXG4gIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2l0ZW0nKSk7XHJcbiAgICB0aGlzLl9idXR0b25TdWJtaXQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnRuJyk7XHJcbiAgfVxyXG5cclxuICAvL9Cf0L7Qu9GD0YfQtdC90LjQtSDQt9C90LDRh9C10L3QuNC5INC/0L7Qu9C10Lkg0YTQvtGA0LzRi1xyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGlucHV0VmFsdWVzTGlzdCA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goaW5wdXQgPT4ge1xyXG4gICAgICBpbnB1dFZhbHVlc0xpc3RbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIGlucHV0VmFsdWVzTGlzdDtcclxuICB9XHJcblxyXG4gIC8v0JTQvtCx0LDQstC70LXQvdC40LUg0YHQu9GD0YjQsNGC0LXQu9C10Lkg0YHQvtCx0YvRgtC40LlcclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KGRhdGEpO1xyXG4gICAgIH0pXHJcbiAgfVxyXG5cclxuICAvL9CX0LDQv9C+0LvQvdC10L3QuNC1INC/0L7Qu9C10Lkg0YTQvtGA0LzRiyDQtNCw0L3QvdGL0LzQuCDQuNC3INC/0LXRgNC10LTQsNCy0LDQtdC80L7Qs9C+INC+0LHRitC10LrRgtCwXHJcbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xyXG4gICAgbGV0IGluZGV4ID0gMDtcclxuICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XHJcbiAgICAgIHRoaXMuX2lucHV0TGlzdFtpbmRleF0udmFsdWUgPSBkYXRhW2tleV07XHJcbiAgICAgIGluZGV4Kys7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9CX0LDQutGA0YvRgtC40LUg0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LAg0YHQviDRgdCx0YDQvtGB0L7QvCDQt9C90LDRh9C10L3QuNC5INC/0L7Qu9C10Lkg0YTQvtGA0LzRi1xyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICB9XHJcblxyXG4gIFxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2pvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XHJcbiAgICB0aGlzLmlkO1xyXG4gIH1cclxuXHJcbiAgLy/QnNC10YLQvtC0INC/0L7Qu9GD0YfQtdC90LjQtSDQtNCw0L3QvdGL0YUg0L/RgNC+0YTQuNC70Y8g0YHQviDRgdGC0YDQsNC90LjRhtGLXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCBkYXRhID0ge307XHJcbiAgICBkYXRhLm5hbWUgPSB0aGlzLl9uYW1lLnRleHRDb250ZW50O1xyXG4gICAgZGF0YS5qb2IgPSB0aGlzLl9qb2IudGV4dENvbnRlbnQ7XHJcblxyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQg0YPRgdGC0LDQvdC+0LLQutC4INC00LDQvdC90YvRhSDQv9GA0L7RhNC40LvRjyDQvdCwINGB0YLRgNCw0L3QuNGG0LUg0LjQtyDQv9C10YDQtdC00LDQstCw0LXQvNC+0LPQviDQvtCx0YrQtdC60YLQsFxyXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQsIGF2YXRhciwgX2lkIH0pIHtcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fam9iLnRleHRDb250ZW50ID0gYWJvdXQ7XHJcbiAgICB0aGlzLnNldEF2YXRhcih7IGF2YXRhciB9KTtcclxuICAgIHRoaXMuaWQgPSBfaWQ7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQg0YPRgdGC0LDQvdC+0LLQutC4INCw0LLQsNGC0LDRgNCwINC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG4gIHNldEF2YXRhcih7IGF2YXRhciB9KSB7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyO1xyXG4gIH1cclxufSIsImNvbnN0IGhhbmRsZVJlc3BvbnNlID0gcmVzID0+IHsgLy/QntCx0YDQsNCx0L7RgtC60LAg0L7RgtCy0LXRgtCwXHJcbiAgaWYgKHJlcy5vaykge1xyXG4gICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgfVxyXG4gIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IHVybCwgaGVhZGVyc30pIHtcclxuICAgIHRoaXMuX3VybCA9IHVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzXHJcbiAgfVxyXG5cclxuICAvL9Cf0L7Qu9GD0YfQtdC90LjQtSDQtNCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXHJcbiAgZ2V0VXNlckRhdGEoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZWAsIHsgaGVhZGVyczogdGhpcy5faGVhZGVycyB9KVxyXG4gICAgLnRoZW4oaGFuZGxlUmVzcG9uc2UpXHJcbiAgfVxyXG5cclxuICAvL9Cj0YHRgtCw0L3QvtCy0LrQsCDQtNCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXHJcbiAgc2V0VXNlckRhdGEoeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZWAsIHsgXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGFib3V0XHJcbiAgICAgIH0pXHJcbiAgICAgfSlcclxuICAgIC50aGVuKGhhbmRsZVJlc3BvbnNlKVxyXG4gIH1cclxuXHJcbiAgLy/Qn9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINC60LDRgNGC0L7Rh9C10LogXCLQuNC3INC60L7RgNC+0LHQutC4XCJcclxuICBnZXRJbml0aWFsQ2FyZHNEYXRhKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vY2FyZHNgLCB7IGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMgfSlcclxuICAgIC50aGVuKGhhbmRsZVJlc3BvbnNlKVxyXG4gIH1cclxuXHJcbiAgLy/QntGC0L/RgNCw0LLQutCwINC00LDQvdC90YvRhSDQutCw0YDRgtC+0YfQutC4INC90LAg0YHQtdGA0LLQtdGAXHJcbiAgc2V0Q2FyZERhdGEoIHtuYW1lLCBsaW5rIH0gKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHsgXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rXHJcbiAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgLnRoZW4oaGFuZGxlUmVzcG9uc2UpXHJcbiAgfVxyXG5cclxuICAvL9Cj0LTQsNC70LXQvdC40LUg0LTQsNC90L3Ri9GFINC60LDRgNGC0L7Rh9C60Lgg0YEg0YHQtdGA0LLQtdGA0LBcclxuICBkZWxldGVDYXJkKGl0ZW0pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L2NhcmRzLyR7aXRlbS5faWR9YCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIGl0ZW07IC8v0JrQvtC0INC90LUg0LTRg9Cx0LvQuNGA0YPQtdGC0YHRjy4gXHJcbiAgICAgICAgLy9oYW5kbGVSZXNwb25zZSDQsiDRgdC70YPRh9Cw0LUg0YPRgdC/0LXRhdCwINCy0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0YLQstC10YIg0YEg0YHQtdGA0LLQtdGA0LAsXHJcbiAgICAgICAgLy/QsCDQsiDQtNCw0L3QvdC+0Lwg0YHQu9GD0YfQsNC1INCy0L7Qt9Cy0YDQsNGJ0LDQtdGC0YHRjyDQsNGA0LPRg9C80LXQvdGCLCDQv9C10YDQtdC00LDQvdC90YvQuSDQsiBkZWxldGVDYXJkLFxyXG4gICAgICAgIC8v0YIu0LUuINGB0LDQvNCwINC60LDRgNGC0L7Rh9C60LAuINCf0L7RjdGC0L7QvNGDINC90LUg0LjRgdC/0L7Qu9GM0LfQvtCy0LDQu9Cw0YHRjCBoYW5kbGVSZXNwb25zZVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy/QntGC0L/RgNCw0LLQutCwINC90LAg0YHQtdGA0LLQtdGAINC00LDQvdC90YvRhSDQviDQvdCw0LbQsNGC0LjQuCDQvdCwIFwi0LvQsNC50LpcIlxyXG4gIGFkZExpa2UoIHtfaWR9ICkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vY2FyZHMvJHtfaWR9L2xpa2VzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6ICdQVVQnXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oaGFuZGxlUmVzcG9uc2UpXHJcbiAgfVxyXG5cclxuICAvL9Ce0YLQv9GA0LDQstC60LAg0L3QsCDRgdC10YDQstC10YAg0LTQsNC90L3Ri9GFINC+INGB0L3Rj9GC0LjQuCDQu9Cw0LnQutCwXHJcbiAgcmVtb3ZlTGlrZSgge19pZH0gKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkcy8ke19pZH0vbGlrZXNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURSdcclxuICAgIH0pXHJcbiAgICAudGhlbihoYW5kbGVSZXNwb25zZSlcclxuICB9XHJcblxyXG4gIC8v0YPRgdGC0LDQvdC+0LLQutCwINCw0LLQsNGC0LDRgNCwXHJcbiAgc2V0QXZhdGFyKCB7bGlua30gKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogbGlua1xyXG4gICAgICAgfSlcclxuICAgIH0pXHJcbiAgICAudGhlbihoYW5kbGVSZXNwb25zZSk7XHJcbiAgfVxyXG59XHJcblxyXG4iLCJjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcbiAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faXRlbScsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcucG9wdXBfX3NhdmUtYnRuJyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3NhdmUtYnRuX2Rpc2FibGVkJyxcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faXRlbV90eXBlX2Vycm9yJyxcclxuICBlcnJvckNsYXNzOiAncG9wdXBfX2Vycm9yX3Zpc2libGUnLFxyXG4gIGJ1dHRvbk9wYWNpdHk6ICdidXR0b24tb3BhY2l0eSdcclxufTtcclxuXHJcbmNvbnN0IGFwaUNvbmZpZyA9IHtcclxuICB1cmw6ICdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTYwJyxcclxuICBoZWFkZXJzOiB7XHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgYXV0aG9yaXphdGlvbjogJzdkYWJhMzc0LWE1NWUtNDI1MC04MWE5LTRmMzcyNGIyNDc4NCdcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IHNlbGVjdG9ycyA9IHtcclxuICBjb250YWluZXI6ICcuZWxlbWVudHMnLFxyXG4gIG5hbWVGaWVsZDogJy5wcm9maWxlX19uYW1lJyxcclxuICBqb2JGaWVsZDogJy5wcm9maWxlX19kZXNjcmlwdGlvbicsXHJcbiAgYXZhdGFyOiAnLnByb2ZpbGVfX2F2YXRhcicsXHJcbiAgcG9wdXBQcm9maWxlOiAnLnBvcHVwX3R5cGVfcHJvZmlsZScsXHJcbiAgcG9wdXBDYXJkOiAnLnBvcHVwX3R5cGVfY2FyZCcsXHJcbiAgcG9wdXBQaWN0dXJlOiAnLnBvcHVwX3R5cGVfcGljdHVyZScsXHJcbiAgcG9wdXBDb25maXJtOiAnLnBvcHVwX3R5cGVfY29uZmlybScsXHJcbiAgcG9wdXBBdmF0YXI6ICcucG9wdXBfdHlwZV9hdmF0YXInLFxyXG4gIGNhcmRUZW1wbGF0ZUlkOiAnI2NhcmQnXHJcbn1cclxuXHJcblxyXG5cclxuLy/QmtC90L7Qv9C60LhcclxuY29uc3QgYnV0dG9uT3BlblByb2ZpbGVQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xyXG5jb25zdCBidXR0b25PcGVuQ2FyZEFkZGl0aW9uUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpO1xyXG5jb25zdCBidXR0b25BdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLXdyYXBwZXInKTtcclxuXHJcbi8v0KTQvtGA0LzRi1xyXG5jb25zdCBmb3JtRWxlbWVudFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1bbmFtZT1cInByb2ZpbGUtaW5wdXQtZm9ybVwiXScpO1xyXG5jb25zdCBmb3JtRWxlbWVudENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1bbmFtZT1cImFkZC1jYXJkLWlucHV0LWZvcm1cIl0nKTtcclxuY29uc3QgZm9ybUVsZW1lbnRBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1bbmFtZT1cImF2YXRhci1pbnB1dC1mb3JtXCJdJyk7XHJcblxyXG5leHBvcnQge1xyXG4gIGFwaUNvbmZpZyxcclxuICB2YWxpZGF0aW9uQ29uZmlnLFxyXG4gIHNlbGVjdG9ycyxcclxuICBidXR0b25PcGVuUHJvZmlsZVBvcHVwLFxyXG4gIGJ1dHRvbk9wZW5DYXJkQWRkaXRpb25Qb3B1cCxcclxuICBmb3JtRWxlbWVudFByb2ZpbGUsXHJcbiAgZm9ybUVsZW1lbnRDYXJkLFxyXG4gIGZvcm1FbGVtZW50QXZhdGFyLFxyXG4gIGJ1dHRvbkF2YXRhcixcclxufTsiLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwQ29uZmlybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBjb25maXJtZWRBY3Rpb24pIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fYWN0aW9uID0gY29uZmlybWVkQWN0aW9uO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xyXG4gIH1cclxuXHJcbiAgLy/QmNC30LzQtdC90LXQvdC40LUg0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LzQtdGC0L7QtNCwINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwINGBINC/0LXRgNC10LTQsNGH0LXQuSDQsiDQvdC10LPQviDQutCw0YDRgtC+0YfQutC4INC00LvRjyDRg9C00LDQu9C10L3QuNGPXHJcbiAgb3BlbihpdGVtKSB7XHJcbiAgICB0aGlzLml0ZW0gPSBpdGVtO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxuXHJcbiAgLy/QmNC30LzQtdC90LXQvdC40LUg0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LzQtdGC0L7QtNCwINGD0YHRgtCw0L3QvtCy0LvQtdC90LjRjyDRgdC70YPRiNCw0YLQtdC70LXQuVxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2FjdGlvbih0aGlzLml0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59IiwiaW1wb3J0ICcuL2luZGV4LmNzcyc7XHJcbmltcG9ydCBDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2FyZC5qcyc7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuaW1wb3J0IHtcclxuICBhcGlDb25maWcsXHJcbiAgdmFsaWRhdGlvbkNvbmZpZyxcclxuICBzZWxlY3RvcnMsXHJcbiAgYnV0dG9uT3BlblByb2ZpbGVQb3B1cCxcclxuICBidXR0b25PcGVuQ2FyZEFkZGl0aW9uUG9wdXAsXHJcbiAgZm9ybUVsZW1lbnRQcm9maWxlLFxyXG4gIGZvcm1FbGVtZW50Q2FyZCxcclxuICBmb3JtRWxlbWVudEF2YXRhcixcclxuICBidXR0b25BdmF0YXIsfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5pbXBvcnQgUG9wdXBDb25maXJtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBDb25maXJtJztcclxuXHJcbi8v0JPQtdC90LXRgNCw0YbQuNGPINC60LDRgNGC0L7Rh9C60LhcclxuZnVuY3Rpb24gZ2VuZXJhdGVDYXJkKGl0ZW0pIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoaXRlbSwgc2VsZWN0b3JzLmNhcmRUZW1wbGF0ZUlkLCB1c2VySW5mby5pZCwge1xyXG4gICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7IC8v0KTRg9C90LrRhtC40Y8g0L7QsdGA0LDQsdC+0YLRh9C40Log0LrQu9C40LrQsCDQv9C+INC60LDRgNGC0LjQvdC60LVcclxuICAgICAgICAgICAgcG9wdXBJbWFnZS5vcGVuKGNhcmQuZ2V0Q2FyZERhdGEoKSk7XHJcbiAgICB9LFxyXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2s6ICgpID0+IHsgLy/QpNGD0L3QutGG0LjRjyDQvtCx0YDQsNCx0L7RgtGH0LjQuiDQutC70LjQutCwINC/0L4g0LjQutC+0L3QutC1IFwi0YPQtNCw0LvQuNGC0YxcIlxyXG4gICAgICBwb3B1cERlbGV0ZUNvbmZpcm0ub3BlbihjYXJkKTsgLy/QntGC0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDQv9C+0LTRgtCy0LXRgNC20LTQtdC90LjRjyDRg9C00LDQu9C10L3QuNGPXHJcbiAgICB9LFxyXG4gICAgaGFuZGxlTGlrZUNsaWNrOiAoKSA9PiB7IC8v0KTRg9C90LrRhtC40Y8g0L7QsdGA0LDQsdC+0YLRh9C40Log0LrQu9C40LrQsCDQvdCwIFwi0LvQsNC50LpcIlxyXG4gICAgICBpZiAoIWNhcmQuaXNMaWtlZCkge1xyXG4gICAgICAgIGFwaS5hZGRMaWtlKGNhcmQpXHJcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgIGNhcmQudG9nZ2xlTGlrZShyZXMubGlrZXMubGVuZ3RoKTt9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcGkucmVtb3ZlTGlrZShjYXJkKVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICBjYXJkLnRvZ2dsZUxpa2UocmVzLmxpa2VzLmxlbmd0aCk7fSk7XHJcbiAgICAgIH1cclxuICAgIH19KTtcclxuICByZXR1cm4gY2FyZC5jcmVhdGVDYXJkKCk7XHJcbn0gXHJcblxyXG4vL9Ck0YPQvdC60YbQuNGPINCw0LrRgtC40LLQsNGG0LjQuCDQstCw0LvQuNC00LDRhtC40Lgg0LTQu9GPINC+0LHQtdC40YUg0YTQvtGA0Lwg0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbmZ1bmN0aW9uIGVuYWJsZVBhZ2VWYWxpZGF0aW9uKCkge1xyXG4gIGZvcm1Qcm9maWxlVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuICBmb3JtQ2FyZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgZm9ybUF2YXRhclZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbn1cclxuXHJcbi8v0KHQvtC30LTQsNC90LjQtSDRjdC60LfQtdC80L/Qu9GP0YDQsCDQutC70LDRgdGB0LAgQXBpXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoYXBpQ29uZmlnKTtcclxubGV0IGNhcmRDb250YWluZXI7IC8v0J7QsdGK0Y/QstC70LXQvdC40LUsINGH0YLQvtCx0Ysg0LrQvtC90YLQtdC50L3QtdGAINC+0YHRgtCw0LvRgdGPINCyINCz0LvQvtCx0LDQu9GM0L3QvtC5INC+0LHQu9Cw0YHRgtC4INCy0LjQtNC40LzQvtGB0YLQuFxyXG5cclxuUHJvbWlzZS5hbGwoW1xyXG4gIGFwaS5nZXRVc2VyRGF0YSgpIC8v0J/QvtC70YPRh9C10L3QuNC1INC00LDQvdC90YvRhSDQv9GA0L7RhNC40LvRjyDRgSDRgdC10YDQstC10YDQsFxyXG4gIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgfSlcclxuICAuY2F0Y2goKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2cobmV3IEVycm9yKCfQntGI0LjQsdC60LAg0LfQsNCz0YDRg9C30LrQuCcpKTtcclxuICB9KSxcclxuICAgIFxyXG4gIGFwaS5nZXRJbml0aWFsQ2FyZHNEYXRhKClcclxuICAudGhlbihkYXRhID0+IHtcclxuICAgIC8v0KHQvtC30LTQsNC90LjQtSDRjdC60LfQvNC10L/Qu9GP0YDQsCDQutC70LDRgdGB0LAgU2VjdGlvbijQutC+0L3RgtC10LnQvdC10YAg0LrQsNGA0YLQvtGH0LXQuilcclxuICAgIGNhcmRDb250YWluZXIgPSBuZXcgU2VjdGlvbiggeyBcclxuICAgICAgaXRlbXM6IGRhdGEsIC8v0JzQsNGB0YHQuNCyINGBINC00LDQvdC90YvQvNC4INC60LDRgNGC0L7Rh9C10Log0YEg0YHQtdGA0LLQtdGA0LBcclxuICAgICAgcmVuZGVyZXI6IChpdGVtKSA9PiB7IC8v0KTRg9C90LrRhtC40Y8g0L7QsdGA0LDQsdC+0YLRh9C40Log0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuCDQvdCwINGB0YLRgNCw0L3QuNGG0YNcclxuICAgICAgICBjb25zdCBjYXJkID0gZ2VuZXJhdGVDYXJkKGl0ZW0pO1xyXG4gICAgICAgIGNhcmRDb250YWluZXIuYWRkSXRlbShjYXJkKTtcclxuICAgICAgfX0sXHJcbiAgICAgIHNlbGVjdG9ycy5jb250YWluZXIpO1xyXG5cclxuICAvL9Cg0LXQvdC00LXRgCDQutCw0YDRgtC+0YfQtdC6IFwi0LjQtyDQutC+0YDQvtCx0LrQuFwiXHJcbiAgY2FyZENvbnRhaW5lci5hZGRJbml0aWFsSXRlbXMoKTtcclxuICB9KVxyXG5dKTtcclxuXHJcbi8v0KHQvtC30LTQsNC90LjQtSDRjdC60LfQtdC80L/Qu9GP0YDQsCDQutC70LDRgdGB0LAgRm9ybVZhbGlkYXRvciDQtNC70Y8g0LrQsNC20LTQvtC5INGE0L7RgNC80YtcclxuY29uc3QgZm9ybVByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtRWxlbWVudFByb2ZpbGUpO1xyXG5jb25zdCBmb3JtQ2FyZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGZvcm1FbGVtZW50Q2FyZCk7XHJcbmNvbnN0IGZvcm1BdmF0YXJWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtRWxlbWVudEF2YXRhcik7XHJcblxyXG4vL9Ch0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwIFVzZXJJbmZvKNC40L3RhNC+0YDQvNCw0YbQuNGPINC/0YDQvtGE0LjQu9GPKSDQuCDQt9Cw0LPRgNGD0LfQutCwINC00LDQvdC90YvRhSDRgSDRgdC10YDQstC10YDQsFxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZVNlbGVjdG9yOiBzZWxlY3RvcnMubmFtZUZpZWxkLFxyXG4gIGpvYlNlbGVjdG9yOiBzZWxlY3RvcnMuam9iRmllbGQsXHJcbiAgYXZhdGFyU2VsZWN0b3I6IHNlbGVjdG9ycy5hdmF0YXJ9KTtcclxuICBcclxuLy/QodC+0LfQtNCw0L3QuNC1INGN0LrQt9C80LXQv9C70Y/RgNC+0LIg0YHQvtC+0YLQstC10YLRgdCy0YPRjtGJ0LjRhSDQutC70LDRgdGB0L7QsiDQtNC70Y8g0LrQsNC20LTQvtCz0L4g0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LBcclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5jb25zdCBwb3B1cFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybShzZWxlY3RvcnMucG9wdXBQcm9maWxlLCAoZGF0YSkgPT4ge1xyXG4gIHBvcHVwUHJvZmlsZS5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gIGFwaS5zZXRVc2VyRGF0YShkYXRhKVxyXG4gIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTsgXHJcbiAgICBwb3B1cFByb2ZpbGUuY2xvc2UoKTtcclxuICB9KVxyXG4gIC5maW5hbGx5KCgpID0+IHsgcG9wdXBQcm9maWxlLnJlbmRlckxvYWRpbmcoZmFsc2UpOyB9KVxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHNlbGVjdG9ycy5wb3B1cENhcmQsIChkYXRhKSA9PiB7XHJcbiAgcG9wdXBDYXJkLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpLnNldENhcmREYXRhKGRhdGEpXHJcbiAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgIGNvbnN0IGNhcmQgPSBnZW5lcmF0ZUNhcmQoZGF0YSk7XHJcbiAgICBjYXJkQ29udGFpbmVyLmFkZEl0ZW0oY2FyZCk7XHJcbiAgICBwb3B1cENhcmQuY2xvc2UoKTt9KVxyXG4gIC5maW5hbGx5KCgpID0+IHsgcG9wdXBDYXJkLnJlbmRlckxvYWRpbmcoZmFsc2UpOyB9KVxyXG4gIH0pO1xyXG4gIFxyXG5jb25zdCBwb3B1cEF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKHNlbGVjdG9ycy5wb3B1cEF2YXRhciwgKGRhdGEpID0+IHtcclxuICBwb3B1cEF2YXRhci5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gIGFwaS5zZXRBdmF0YXIoZGF0YSlcclxuICAudGhlbihyZXMgPT4geyB1c2VySW5mby5zZXRBdmF0YXIocmVzKTsgfSlcclxuICAudGhlbigoKSA9PiB7IHBvcHVwQXZhdGFyLmNsb3NlKCk7IH0pXHJcbiAgLmZpbmFsbHkoKCkgPT4geyBwb3B1cEF2YXRhci5yZW5kZXJMb2FkaW5nKGZhbHNlKTsgfSlcclxuICB9KTtcclxuXHJcbmNvbnN0IHBvcHVwRGVsZXRlQ29uZmlybSA9IG5ldyBQb3B1cENvbmZpcm0oc2VsZWN0b3JzLnBvcHVwQ29uZmlybSwgIChpdGVtKSA9PiB7XHJcbiAgcG9wdXBEZWxldGVDb25maXJtLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpLmRlbGV0ZUNhcmQoaXRlbSlcclxuICAudGhlbihjYXJkID0+IHsgY2FyZC5kZWxldGUoKSB9KVxyXG4gIC50aGVuKCgpID0+IHsgcG9wdXBEZWxldGVDb25maXJtLmNsb3NlKCk7IH0pXHJcbiAgLmZpbmFsbHkoKCkgPT4geyBwb3B1cERlbGV0ZUNvbmZpcm0ucmVuZGVyTG9hZGluZyhmYWxzZSk7IH0pXHJcbiAgfSk7XHJcbiAgXHJcbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoc2VsZWN0b3JzLnBvcHVwUGljdHVyZSk7XHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICBcclxuICAvL9CU0L7QsdCw0LLQu9C10L3QuNC1INGB0LvRg9GI0LDRgtC10LvQtdC5INC90LAg0LLRgdC1INC80L7QtNCw0LvRjNC90YvQtSDQvtC60L3QsFxyXG4gIHBvcHVwUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIHBvcHVwQ2FyZC5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIHBvcHVwSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBwb3B1cERlbGV0ZUNvbmZpcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBwb3B1cEF2YXRhci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/Ql9Cw0L/QvtC70L3QtdC90LjQtSDRhNC+0YDQvNGLINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC4INC30LDQs9GA0YPQt9C60LUg0YHRgtGA0LDQvdC40YbRiywg0LTQviDQsNC60YLQuNCy0LDRhtC40Lgg0LLQsNC70LjQtNCw0YbQuNC4LFxyXG4vL9C90LXQvtCx0YXQvtC00LjQvNC+INGH0YLQvtCx0Ysg0L/RgNC4INCw0LrRgtC40LLQsNGG0LjQuCDQstCw0LvQuNC00LDRhtC40Lgg0L7QvdCwINC90LUg0LTQtdCw0LrRgtC40LLQuNGA0L7QstCw0LvQsCDQutC90L7Qv9C60YMsXHJcbi8v0L/RgNC+0LLQtdGA0LjQsiDQv9GD0YHRgtGD0Y4g0YTQvtGA0LzRg1xyXG5wb3B1cFByb2ZpbGUuc2V0SW5wdXRWYWx1ZXModXNlckluZm8uZ2V0VXNlckluZm8oKSk7XHJcblxyXG4vL9CU0L7QsdCw0LLQu9C10L3QuNC1INGB0LvRg9GI0LDRgtC10LvQtdC5INC90LAg0LrQvdC+0L/QutC4INC+0YLQutGA0YvRgtC40Y8g0LzQvtC00LDQu9GM0L3Ri9GFINC+0LrQvtC9XHJcbmJ1dHRvbk9wZW5Qcm9maWxlUG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgcG9wdXBQcm9maWxlLnNldElucHV0VmFsdWVzKHVzZXJJbmZvLmdldFVzZXJJbmZvKCkpO1xyXG4gIHBvcHVwUHJvZmlsZS5vcGVuKCl9KTtcclxuXHJcbmJ1dHRvbk9wZW5DYXJkQWRkaXRpb25Qb3B1cC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBmb3JtQ2FyZFZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gIHBvcHVwQ2FyZC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYnV0dG9uQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIHBvcHVwQXZhdGFyLm9wZW4oKTtcclxufSk7XHJcblxyXG4vL9CQ0LrRgtC40LLQsNGG0LjRjyDQstCw0LvQuNC00LDRhtC40Lgg0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbmVuYWJsZVBhZ2VWYWxpZGF0aW9uKCk7Il0sIm5hbWVzIjpbIkNhcmQiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwicGFnZU93bmVyIiwibmFtZSIsImxpbmsiLCJsaWtlcyIsIm93bmVyIiwiX2lkIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJ0aGlzIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfbmFtZSIsIl9saW5rIiwiX2hhbmRsZUNhcmRDbGljayIsIl9saWtlcyIsIl9saWtlQ291bnQiLCJsZW5ndGgiLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfb3duZXIiLCJfaGFuZGxlTGlrZUNsaWNrIiwiaXNMaWtlZCIsIl9jaGVja0xpa2UiLCJfdXNlcklkIiwiX3RlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsIl9jYXJkIiwiY2xvbmVOb2RlIiwiX2ltYWdlIiwiX3RleHQiLCJfYnV0dG9uTGlrZSIsIl9idXR0b25EZWxldGUiLCJfbGlrZUNvdW50ZXIiLCJyZW1vdmUiLCJsaWtlIiwiZm9yRWFjaCIsInVzZXIiLCJjbGFzc0xpc3QiLCJhZGQiLCJjb3VudCIsInNldExpa2VzQ291bnQiLCJfcmVtb3ZlTGlrZSIsIl9hZGRMaWtlIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiZGF0YSIsInRleHQiLCJfZ2V0VGVtcGxhdGUiLCJfY2hlY2tPd25lciIsIl9zZXREYXRhIiwiX3NldExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtIiwiX2NvbmZpZyIsIl9mb3JtIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX2J1dHRvbkVsZW1lbnQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImlucHV0RWxlbWVudCIsImVycm9yRWxlbWVudCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImJ1dHRvbk9wYWNpdHkiLCJkaXNhYmxlZCIsIl9zZXRFdmVudExpc3RlbmVycyIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyU2VsZWN0b3IiLCJfY29udGFpbmVyIiwiY2FyZCIsInByZXBlbmQiLCJyZXZlcnNlIiwiaXRlbSIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJfYnV0dG9uU3VibWl0IiwiX2J1dHRvbkNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsImNsb3NlIiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsImlzTG9hZGluZyIsImRhdGFzZXQiLCJidXR0b25Mb2FkaW5nVGV4dCIsImJ1dHRvblRleHQiLCJQb3B1cFdpdGhJbWFnZSIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJpbnB1dFZhbHVlc0xpc3QiLCJpbnB1dCIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbmRleCIsInJlc2V0IiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX2pvYiIsIl9hdmF0YXIiLCJqb2IiLCJhYm91dCIsImF2YXRhciIsInNldEF2YXRhciIsImhhbmRsZVJlc3BvbnNlIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsIkVycm9yIiwic3RhdHVzIiwiQXBpIiwidXJsIiwiaGVhZGVycyIsIl91cmwiLCJfaGVhZGVycyIsImZldGNoIiwidGhlbiIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidmFsaWRhdGlvbkNvbmZpZyIsImZvcm1TZWxlY3RvciIsInNlbGVjdG9ycyIsImNvbnRhaW5lciIsIm5hbWVGaWVsZCIsImpvYkZpZWxkIiwicG9wdXBQcm9maWxlIiwicG9wdXBDYXJkIiwicG9wdXBQaWN0dXJlIiwicG9wdXBDb25maXJtIiwicG9wdXBBdmF0YXIiLCJjYXJkVGVtcGxhdGVJZCIsImJ1dHRvbk9wZW5Qcm9maWxlUG9wdXAiLCJidXR0b25PcGVuQ2FyZEFkZGl0aW9uUG9wdXAiLCJidXR0b25BdmF0YXIiLCJmb3JtRWxlbWVudFByb2ZpbGUiLCJmb3JtRWxlbWVudENhcmQiLCJmb3JtRWxlbWVudEF2YXRhciIsIlBvcHVwQ29uZmlybSIsImNvbmZpcm1lZEFjdGlvbiIsIl9hY3Rpb24iLCJnZW5lcmF0ZUNhcmQiLCJ1c2VySW5mbyIsInBvcHVwSW1hZ2UiLCJvcGVuIiwiZ2V0Q2FyZERhdGEiLCJwb3B1cERlbGV0ZUNvbmZpcm0iLCJhcGkiLCJyZW1vdmVMaWtlIiwidG9nZ2xlTGlrZSIsImFkZExpa2UiLCJjcmVhdGVDYXJkIiwiY2FyZENvbnRhaW5lciIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRVc2VyRGF0YSIsInNldFVzZXJJbmZvIiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiZ2V0SW5pdGlhbENhcmRzRGF0YSIsImFkZEl0ZW0iLCJhZGRJbml0aWFsSXRlbXMiLCJmb3JtUHJvZmlsZVZhbGlkYXRvciIsImZvcm1DYXJkVmFsaWRhdG9yIiwiZm9ybUF2YXRhclZhbGlkYXRvciIsInJlbmRlckxvYWRpbmciLCJzZXRVc2VyRGF0YSIsImZpbmFsbHkiLCJzZXRDYXJkRGF0YSIsImRlbGV0ZUNhcmQiLCJkZWxldGUiLCJzZXRFdmVudExpc3RlbmVycyIsInNldElucHV0VmFsdWVzIiwiZ2V0VXNlckluZm8iLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==